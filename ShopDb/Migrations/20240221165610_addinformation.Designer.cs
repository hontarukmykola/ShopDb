// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopDb;

#nullable disable

namespace ShopDb.Migrations
{
    [DbContext(typeof(ShopDbContex))]
    [Migration("20240221165610_addinformation")]
    partial class addinformation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("ShopsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "ShopsId");

                    b.HasIndex("ShopsId");

                    b.ToTable("ProductShop");
                });

            modelBuilder.Entity("ShopDb.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categorys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "dairy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "food"
                        },
                        new
                        {
                            Id = 3,
                            Name = "fruit"
                        });
                });

            modelBuilder.Entity("ShopDb.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 2,
                            Name = "Warshawa"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Name = "Washington"
                        });
                });

            modelBuilder.Entity("ShopDb.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 3,
                            Name = "USA"
                        });
                });

            modelBuilder.Entity("ShopDb.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            Name = "cashier"
                        },
                        new
                        {
                            Id = 3,
                            Name = "guardian"
                        });
                });

            modelBuilder.Entity("ShopDb.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("discount")
                        .HasColumnType("real");

                    b.Property<bool>("isInStock")
                        .HasColumnType("bit");

                    b.Property<int>("quantiti")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Milk",
                            Price = 40m,
                            discount = 5f,
                            isInStock = false,
                            quantiti = 28
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Name = "Bread",
                            Price = 30m,
                            discount = 2f,
                            isInStock = false,
                            quantiti = 34
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Name = "apple",
                            Price = 70m,
                            discount = 6f,
                            isInStock = false,
                            quantiti = 64
                        });
                });

            modelBuilder.Entity("ShopDb.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParkingArea")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Soborna26",
                            CityId = 1,
                            Name = "ATB",
                            ParkingArea = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "StevanaBanderu4",
                            CityId = 2,
                            Name = "Epicentr",
                            ParkingArea = 2
                        },
                        new
                        {
                            Id = 3,
                            Address = "cuntralna7",
                            CityId = 3,
                            Name = "Ikea",
                            ParkingArea = 3
                        });
                });

            modelBuilder.Entity("ShopDb.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShopId");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "David@email.com",
                            Name = "Daivd",
                            PhoneNumber = "12345678",
                            PositionId = 1,
                            Salary = 12000m,
                            ShopId = 1,
                            SurName = "Ivanov"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Ivan@email.com",
                            Name = "Ivan",
                            PhoneNumber = "75462746",
                            PositionId = 2,
                            Salary = 9000m,
                            ShopId = 2,
                            SurName = "Bondarenko"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Vitya@email.com",
                            Name = "Vitya",
                            PhoneNumber = "26584731",
                            PositionId = 3,
                            Salary = 11000m,
                            ShopId = 3,
                            SurName = "Ivanenko"
                        });
                });

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.HasOne("ShopDb.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDb.Shop", null)
                        .WithMany()
                        .HasForeignKey("ShopsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopDb.City", b =>
                {
                    b.HasOne("ShopDb.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ShopDb.Product", b =>
                {
                    b.HasOne("ShopDb.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShopDb.Shop", b =>
                {
                    b.HasOne("ShopDb.City", "City")
                        .WithMany("Shops")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("ShopDb.Worker", b =>
                {
                    b.HasOne("ShopDb.Position", "Position")
                        .WithMany("Workers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDb.Shop", "Shop")
                        .WithMany("Workers")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("ShopDb.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ShopDb.City", b =>
                {
                    b.Navigation("Shops");
                });

            modelBuilder.Entity("ShopDb.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("ShopDb.Position", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("ShopDb.Shop", b =>
                {
                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
